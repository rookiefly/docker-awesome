version: "3.5"

services:
  zookeeper:
    image: zookeeper:3.4.10
    ports:
      - "2181:2181"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  kafka:
    image: rookiefly/kafka:latest
    ports:
      - "9092:9092"
      - "9094:9094"
    deploy:
      mode: global
    environment:
      HOSTNAME_COMMAND: "hostname | awk -F'-' '{print $$2}'"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 1099
      JMX_HOST: "hostname | awk -F'-' '{print $$2}'"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=$JMX_HOST -Dcom.sun.management.jmxremote.rmi.port=$JMX_PORT"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka-data:/kafka

  kafka-center:
    image: xaecbd/kafka-center:2.3.0
    ports:
      - "8080:8080"
    volumes:
      - ./application.properties:/opt/app/kafka-center/config/application.properties
    depends_on:
      - mysqldb
      - elasticsearch
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - cluster.initial_master_nodes=es01
      - node.ml=false
      - xpack.ml.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - bootstrap.memory_lock=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - eslogs01:/usr/share/elasticsearch/logs
    ports:
      - 9200:9200
    deploy:
      mode: replicated
      replicas: 1

  mysqldb:
    image: rookiefly/mysql:latest
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init-files:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kafka_center
    ports:
      - "3306:3306"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

volumes:
  esdata01:
    driver: local
  eslogs01:
    driver: local
  mysql-data:
    driver: local
  zoo-data:
    driver: local
  zoo-log:
    driver: local
  kafka-data:
    driver: local
